(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{182:function(e,t,n){"use strict";n.r(t);var s=n(0),a=Object(s.a)({},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"content"},[e._m(0),e._v(" "),n("p",[e._v("Shadow allows for customizing the process by which the output JAR is generated through the\n"),n("a",{attrs:{href:"http://imperceptiblethoughts.com/shadow-new-site/api/com/github/jengelman/gradle/plugins/shadow/transformers/Transformer.html",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("Transformer")]),n("OutboundLink")],1),e._v(" interface.\nThis is a concept that has been carried over from the original Maven Shade implementation.\nA "),n("a",{attrs:{href:"http://imperceptiblethoughts.com/shadow-new-site/api/com/github/jengelman/gradle/plugins/shadow/transformers/Transformer.html",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("Transformer")]),n("OutboundLink")],1),e._v(" is invoked for each\nentry in the JAR before being written to the final output JAR.\nThis allows a "),n("a",{attrs:{href:"http://imperceptiblethoughts.com/shadow-new-site/api/com/github/jengelman/gradle/plugins/shadow/transformers/Transformer.html",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("Transformer")]),n("OutboundLink")],1),e._v(" to\ndetermine if it should process a particular entry and apply any modifications before writing the stream to the output.")]),e._v(" "),e._m(1),e._m(2),e._v(" "),e._m(3),e._m(4),e._v(" "),e._m(5),e._m(6),e._v(" "),e._m(7),e._v(" "),n("p",[e._v("Multiple dependencies may use the same service descriptor file name.\nIn this case, it is generally desired to merge the content of each instance of the file into a single output file.\nThe "),n("a",{attrs:{href:"http://imperceptiblethoughts.com/shadow-new-site/api/com/github/jengelman/gradle/plugins/shadow/transformers/ServiceFileTransformer.html",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("ServiceFileTransformer")]),n("OutboundLink")],1),e._v("\nclass is used to perform this merging. By default, it will merge each copy of a file under "),n("code",[e._v("META-INF/services")]),e._v(" into a\nsingle file in the output JAR.")]),e._v(" "),e._m(8),n("p",[e._v("The above code snippet is a convenience syntax for calling\n"),n("a",{attrs:{href:"http://imperceptiblethoughts.com/shadow-new-site/api/com/github/jengelman/gradle/plugins/shadow/tasks/ShadowJar.html#transform(Class%3C?%20extends%20Transformer%3E)",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("transform(ServiceFileTransformer.class)")]),n("OutboundLink")],1),e._v(".")]),e._v(" "),n("blockquote",[n("p",[e._v("Groovy Extension Module descriptor files (located at "),n("code",[e._v("META-INF/services/org.codehaus.groovy.runtime.ExtensionModule")]),e._v(")\nare ignored by the "),n("a",{attrs:{href:"http://imperceptiblethoughts.com/shadow-new-site/api/com/github/jengelman/gradle/plugins/shadow/transformers/ServiceFileTransformer.html",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("ServiceFileTransformer")]),n("OutboundLink")],1),e._v(".\nThis is due to these files having a different syntax than standard service descriptor files.\nUse the "),n("a",{attrs:{href:"http://imperceptiblethoughts.com/shadow-new-site/api/com/github/jengelman/gradle/plugins/shadow/tasks/ShadowJar.html#mergeGroovyExtensionModules()",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("mergeGroovyExtensionModules()")]),n("OutboundLink")],1),e._v(" method to merge\nthese files if your dependencies contain them.")])]),e._v(" "),e._m(9),e._v(" "),n("p",[e._v("By default the "),n("a",{attrs:{href:"http://imperceptiblethoughts.com/shadow-new-site/api/com/github/jengelman/gradle/plugins/shadow/transformers/ServiceFileTransformer.html",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("ServiceFileTransformer")]),n("OutboundLink")],1),e._v("\nis configured to merge files in "),n("code",[e._v("META-INF/services")]),e._v(".\nThis directory can be overridden to merge descriptor files in a different location.")]),e._v(" "),e._m(10),e._m(11),e._v(" "),n("p",[e._v("The "),n("a",{attrs:{href:"http://imperceptiblethoughts.com/shadow-new-site/api/com/github/jengelman/gradle/plugins/shadow/transformers/ServiceFileTransformer.html",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("ServiceFileTransformer")]),n("OutboundLink")],1),e._v("\nclass supports specifying specific files to include or exclude from merging.")]),e._v(" "),e._m(12),e._m(13),e._v(" "),n("p",[e._v("Shadow provides a specific transformer for dealing with Groovy extension module files.\nThis is due to their special syntax and how they need to be merged together.\nThe "),n("a",{attrs:{href:"http://imperceptiblethoughts.com/shadow-new-site/api/com/github/jengelman/gradle/plugins/shadow/transformers/GroovyExtensionModuleTransformer.html",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("GroovyExtensionModuleTransformer")]),n("OutboundLink")],1),e._v("\nwill handle these files.\nThe "),n("a",{attrs:{href:"http://imperceptiblethoughts.com/shadow-new-site/api/com/github/jengelman/gradle/plugins/shadow/tasks/ShadowJar.html",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("ShadowJar")]),n("OutboundLink")],1),e._v(" task also provides a short syntax\nmethod to add this transformer.")]),e._v(" "),e._m(14),e._m(15),e._v(" "),n("p",[e._v("Generic text files can be appended together using the\n"),n("a",{attrs:{href:"http://imperceptiblethoughts.com/shadow-new-site/api/com/github/jengelman/gradle/plugins/shadow/transformers/AppendingTransformer.html",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("AppendingTransformer")]),n("OutboundLink")],1),e._v(".\nEach file is appended using new lines to separate content.\nThe "),n("a",{attrs:{href:"http://imperceptiblethoughts.com/shadow-new-site/api/com/github/jengelman/gradle/plugins/shadow/tasks/ShadowJar.html",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("ShadowJar")]),n("OutboundLink")],1),e._v(" task provides a short syntax\nmethod of\n"),n("a",{attrs:{href:"http://imperceptiblethoughts.com/shadow-new-site/api/com/github/jengelman/gradle/plugins/shadow/tasks/ShadowJar.html#append(java.lang.String)",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("append(String)")]),n("OutboundLink")],1),e._v(" to\nconfigure this transformer.")]),e._v(" "),e._m(16),e._m(17),e._v(" "),n("p",[e._v("XML files require a special transformer for merging.\nThe "),n("a",{attrs:{href:"http://imperceptiblethoughts.com/shadow-new-site/api/com/github/jengelman/gradle/plugins/shadow/transformers/XmlAppendingTransformer.html",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("XmlAppendingTransformer")]),n("OutboundLink")],1),e._v("\nreads each XML document and merges each root element into a single document.\nThere is no short syntax method for the "),n("a",{attrs:{href:"http://imperceptiblethoughts.com/shadow-new-site/api/com/github/jengelman/gradle/plugins/shadow/transformers/XmlAppendingTransformer.html",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("XmlAppendingTransformer")]),n("OutboundLink")],1),e._v(".\nIt must be added using the "),n("a",{attrs:{href:"http://imperceptiblethoughts.com/shadow-new-site/api/com/github/jengelman/gradle/plugins/shadow//tasks/ShadowJar.html#transform(Class%3C?%20Fextends%20Transformer%3E)",target:"_blank",rel:"noopener noreferrer"}},[n("code",[e._v("transform")]),n("OutboundLink")],1),e._v(" methods.")]),e._v(" "),e._m(18)])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"controlling-jar-content-merging"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#controlling-jar-content-merging","aria-hidden":"true"}},[this._v("#")]),this._v(" Controlling JAR Content Merging")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"language-groovy extra-class"},[n("pre",{pre:!0,attrs:{class:"language-groovy"}},[n("code",[n("span",{attrs:{class:"token comment"}},[e._v("// Adding a Transformer")]),e._v("\nshadowJar "),n("span",{attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{attrs:{class:"token function"}},[e._v("transform")]),n("span",{attrs:{class:"token punctuation"}},[e._v("(")]),e._v("MyTransformer"),n("span",{attrs:{class:"token operator"}},[e._v(".")]),n("span",{attrs:{class:"token keyword"}},[e._v("class")]),n("span",{attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),n("span",{attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Additionally, a "),t("code",[this._v("Transformer")]),this._v(" can accept a "),t("code",[this._v("Closure")]),this._v(" to configure the provided "),t("code",[this._v("Transformer")]),this._v(".")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"language-groovy extra-class"},[n("pre",{pre:!0,attrs:{class:"language-groovy"}},[n("code",[n("span",{attrs:{class:"token comment"}},[e._v("// Configuring a Transformer")]),e._v("\nshadowJar "),n("span",{attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{attrs:{class:"token function"}},[e._v("transform")]),n("span",{attrs:{class:"token punctuation"}},[e._v("(")]),e._v("MyTransformer"),n("span",{attrs:{class:"token operator"}},[e._v(".")]),n("span",{attrs:{class:"token keyword"}},[e._v("class")]),n("span",{attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),n("span",{attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    enable "),n("span",{attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),n("span",{attrs:{class:"token boolean"}},[e._v("true")]),e._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),n("span",{attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("An instantiated instance of a "),t("code",[this._v("Transformer")]),this._v(" can also be provided.")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"language-groovy extra-class"},[n("pre",{pre:!0,attrs:{class:"language-groovy"}},[n("code",[n("span",{attrs:{class:"token comment"}},[e._v("// Adding a Transformer Instance")]),e._v("\nshadowJar "),n("span",{attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{attrs:{class:"token function"}},[e._v("transform")]),n("span",{attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{attrs:{class:"token keyword"}},[e._v("new")]),e._v(" "),n("span",{attrs:{class:"token class-name"}},[e._v("MyTransformer")]),n("span",{attrs:{class:"token punctuation"}},[e._v("(")]),e._v("enabled"),n("span",{attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),n("span",{attrs:{class:"token boolean"}},[e._v("true")]),n("span",{attrs:{class:"token punctuation"}},[e._v(")")]),n("span",{attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),n("span",{attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"merging-service-descriptor-files"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#merging-service-descriptor-files","aria-hidden":"true"}},[this._v("#")]),this._v(" Merging Service Descriptor Files")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Java libraries often contain service descriptors files in the "),t("code",[this._v("META-INF/services")]),this._v(" directory of the JAR.\nA service descriptor typically contains a line delimited list of classes that are supported for a particular "),t("em",[this._v("service")]),this._v(".\nAt runtime, this file is read and used to configure library or application behavior.")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"language-groovy extra-class"},[n("pre",{pre:!0,attrs:{class:"language-groovy"}},[n("code",[n("span",{attrs:{class:"token comment"}},[e._v("// Merging Service Files")]),e._v("\nshadowJar "),n("span",{attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{attrs:{class:"token function"}},[e._v("mergeServiceFiles")]),n("span",{attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),n("span",{attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"configuring-the-location-of-service-descriptor-files"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#configuring-the-location-of-service-descriptor-files","aria-hidden":"true"}},[this._v("#")]),this._v(" Configuring the Location of Service Descriptor Files")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"language-groovy extra-class"},[n("pre",{pre:!0,attrs:{class:"language-groovy"}},[n("code",[n("span",{attrs:{class:"token comment"}},[e._v("// Merging Service Files in a Specific Directory")]),e._v("\nshadowJar "),n("span",{attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  mergeServiceFiles "),n("span",{attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    path "),n("span",{attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),n("span",{attrs:{class:"token string"}},[e._v("'META-INF/custom'")]),e._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),n("span",{attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"excluding-including-specific-service-descriptor-files-from-merging"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#excluding-including-specific-service-descriptor-files-from-merging","aria-hidden":"true"}},[this._v("#")]),this._v(" Excluding/Including Specific Service Descriptor Files From Merging")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"language-groovy extra-class"},[n("pre",{pre:!0,attrs:{class:"language-groovy"}},[n("code",[n("span",{attrs:{class:"token comment"}},[e._v("// Excluding a Service Descriptor From Merging")]),e._v("\nshadowJar "),n("span",{attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  mergeServiceFiles "),n("span",{attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    exclude "),n("span",{attrs:{class:"token string"}},[e._v("'META-INF/services/com.acme.*'")]),e._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),n("span",{attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"merging-groovy-extension-modules"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#merging-groovy-extension-modules","aria-hidden":"true"}},[this._v("#")]),this._v(" Merging Groovy Extension Modules")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"language-groovy extra-class"},[n("pre",{pre:!0,attrs:{class:"language-groovy"}},[n("code",[n("span",{attrs:{class:"token comment"}},[e._v("// Merging Groovy Extension Modules")]),e._v("\nshadowJar "),n("span",{attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{attrs:{class:"token function"}},[e._v("mergeGroovyExtensionModules")]),n("span",{attrs:{class:"token punctuation"}},[e._v("(")]),n("span",{attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),n("span",{attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"appending-text-files"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#appending-text-files","aria-hidden":"true"}},[this._v("#")]),this._v(" Appending Text Files")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"language-groovy extra-class"},[n("pre",{pre:!0,attrs:{class:"language-groovy"}},[n("code",[n("span",{attrs:{class:"token comment"}},[e._v("// Appending a Property File")]),e._v("\nshadowJar "),n("span",{attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  append "),n("span",{attrs:{class:"token string"}},[e._v("'test.properties'")]),e._v("\n"),n("span",{attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"appending-xml-files"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#appending-xml-files","aria-hidden":"true"}},[this._v("#")]),this._v(" Appending XML Files")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"language-groovy extra-class"},[n("pre",{pre:!0,attrs:{class:"language-groovy"}},[n("code",[n("span",{attrs:{class:"token comment"}},[e._v("// Appending a XML File")]),e._v("\nshadowJar "),n("span",{attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),n("span",{attrs:{class:"token function"}},[e._v("tranform")]),n("span",{attrs:{class:"token punctuation"}},[e._v("(")]),e._v("XmlAppendingTransformer"),n("span",{attrs:{class:"token operator"}},[e._v(".")]),n("span",{attrs:{class:"token keyword"}},[e._v("class")]),n("span",{attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),n("span",{attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    resource "),n("span",{attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),n("span",{attrs:{class:"token string"}},[e._v("'properties.xml'")]),e._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),n("span",{attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])])}],!1,null,null,null);a.options.__file="README.md";t.default=a.exports}}]);